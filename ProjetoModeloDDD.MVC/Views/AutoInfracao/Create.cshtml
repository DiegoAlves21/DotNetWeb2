@model ProjetoModeloDDD.MVC.ViewModels.AutoInfracaoViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Auto de Infração</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.processo.Fornecedor.Cnpj, htmlAttributes: new { @class = "control-label col-md-2" }, labelText: "CNPJ")
            <div class="col-md-10">
                @Html.EditorFor(model => model.processo.Fornecedor.Cnpj, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.processo.Fornecedor.Cnpj, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.processo.Fornecedor.RazaoSocial, htmlAttributes: new { @class = "control-label col-md-2" }, labelText: "Razão Social")
            <div class="col-md-10">
                @Html.EditorFor(model => model.processo.Fornecedor.RazaoSocial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.processo.Fornecedor.RazaoSocial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.processo.Fornecedor.ReceitaBruta, htmlAttributes: new { @class = "control-label col-md-2" }, labelText: "Receita Bruta")
            <div class="col-md-10">
                @Html.EditorFor(model => model.processo.Fornecedor.ReceitaBruta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.processo.Fornecedor.ReceitaBruta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.processo.dataRelato, htmlAttributes: new { @class = "control-label col-md-2" }, labelText: "Data do Relato")
            <div class="col-md-10">
                @Html.EditorFor(model => model.processo.dataRelato, new { htmlAttributes = new {@class = "form-control" } })
                @Html.ValidationMessageFor(model => model.processo.dataRelato, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.processo.relatoFiscalizacao, htmlAttributes: new { @class = "control-label col-md-2" }, labelText: "Relato da Fiscalização")
            <div class="col-md-10">
                @Html.EditorFor(model => model.processo.relatoFiscalizacao, new { htmlAttributes = new {@class = "form-control" } })
                @Html.ValidationMessageFor(model => model.processo.relatoFiscalizacao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.gravidade, htmlAttributes: new { @class = "control-label col-md-2" }, labelText: "Gravidade")
            <div class="col-md-10">
                @{
                    List<SelectListItem> listItems = new List<SelectListItem>();
                    listItems.Add(new SelectListItem
                    {
                        Text = "1",
                        Value = "1",
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "2",
                        Value = "2"
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "3",
                        Value = "3"
                    });
                }
                @Html.DropDownListFor(model => model.gravidade, listItems, "Selecione")
                @*@Html.EditorFor(model => model.gravidade, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.gravidade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.atenuante, htmlAttributes: new { @class = "control-label col-md-2" }, labelText: "Atenuante")
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.atenuante)
                    @Html.ValidationMessageFor(model => model.atenuante, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.agravante, htmlAttributes: new { @class = "control-label col-md-2" }, labelText: "Agravante")
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.agravante)
                    @Html.ValidationMessageFor(model => model.agravante, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Home", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
